case 1: Generate monthly statements for all customers.
o Question: Write a PL/SQL block using an explicit cursor GenerateMonthlyStatements that retrieves all transactions for the current month and prints a statement for each customer.
CODE: DECLARE
    -- Cursor to retrieve transactions for the current month
    CURSOR c_transactions IS
        SELECT t.ACCOUNT_ID, a.CUSTOMER_NAME, t.TRANSACTION_DATE, t.AMOUNT
        FROM TRANSACTIONS t
        JOIN ACCOUNTS a ON t.ACCOUNT_ID = a.ACCOUNT_ID
        WHERE EXTRACT(MONTH FROM t.TRANSACTION_DATE) = EXTRACT(MONTH FROM SYSDATE)
          AND EXTRACT(YEAR FROM t.TRANSACTION_DATE) = EXTRACT(YEAR FROM SYSDATE)
        ORDER BY a.CUSTOMER_NAME, t.TRANSACTION_DATE;
    -- Record to hold cursor data
    r_transaction c_transactions%ROWTYPE;
BEGIN
    -- Open the cursor and fetch each record
    OPEN c_transactions;
    LOOP
        FETCH c_transactions INTO r_transaction;
        EXIT WHEN c_transactions%NOTFOUND;
        -- Print statement for each transaction
        DBMS_OUTPUT.PUT_LINE('Customer: ' || r_transaction.CUSTOMER_NAME);
        DBMS_OUTPUT.PUT_LINE('Transaction Date: ' || TO_CHAR(r_transaction.TRANSACTION_DATE, 'DD-MON-YYYY'));
        DBMS_OUTPUT.PUT_LINE('Amount: ' || TO_CHAR(r_transaction.AMOUNT, 'FM999,999.00'));
        DBMS_OUTPUT.PUT_LINE('-----------------------------------');
    END LOOP;
    -- Close the cursor
    CLOSE c_transactions;
EXCEPTION
    WHEN OTHERS THEN
        -- Handle any unexpected errors
        DBMS_OUTPUT.PUT_LINE('Error generating statements: ' || SQLERRM);
END;
case 2: Apply annual fee to all accounts.
o Question: Write a PL/SQL block using an explicit cursor ApplyAnnualFee that deducts an annual maintenance fee from the balance of all accounts.
CODE: DECLARE
      v_annual_fee CONSTANT NUMBER := 50.00;
    CURSOR c_accounts IS
        SELECT ACCOUNT_ID, BALANCE
   FROM ACCOUNTS
        FOR UPDATE;
    r_account c_accounts%ROWTYPE;
BEGIN
    OPEN c_accounts;
    LOOP
        FETCH c_accounts INTO r_account;
        EXIT WHEN c_accounts%NOTFOUND;
IF r_account.BALANCE >= v_annual_fee THEN
            UPDATE ACCOUNTS
            SET BALANCE = r_account.BALANCE - v_annual_fee
            WHERE ACCOUNT_ID = r_account.ACCOUNT_ID;
        ELSE
            DBMS_OUTPUT.PUT_LINE('Account ' || r_account.ACCOUNT_ID || ' has insufficient balance for fee deduction.');
        END IF;
    END LOOP;
    COMMIT;
    CLOSE c_accounts;
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
        DBMS_OUTPUT.PUT_LINE('Error applying annual fee: ' || SQLERRM);
END;

case 3: Update the interest rate for all loans based on a new policy.
o Question: Write a PL/SQL block using an explicit cursor UpdateLoanInterestRates that fetches all loans and updates their interest rates based on the new policy.
CODE:
DECLARE
v_new_interest_rate CONSTANT NUMBER := 5.00;
    CURSOR c_loans IS
        SELECT LOAN_ID, INTEREST_RATE
        FROM LOANS
        FOR UPDATE;
    r_loan c_loans%ROWTYPE;
BEGIN
    OPEN c_loans;
    LOOP
        FETCH c_loans INTO r_loan;
        EXIT WHEN c_loans%NOTFOUND;
        UPDATE LOANS
        SET INTEREST_RATE = v_new_interest_rate
        WHERE LOAN_ID = r_loan.LOAN_ID;
    END LOOP;
    COMMIT;
    CLOSE c_loans;

EXCEPTION
    WHEN OTHERS THEN
           ROLLBACK;
        DBMS_OUTPUT.PUT_LINE('Error updating loan interest rates: ' || SQLERRM);
END;


